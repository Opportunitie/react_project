{"version":3,"sources":["experience.js","homeWork.js","serviceWorker.js","index.js"],"names":["Option","RangePicker","ExperienceItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","verify","form","validateFieldsAndScroll","err","values","console","log","delete","deleteItem","getDate","id","toString","updateParent","state","size","onRef","assertThisInitialized","getFieldsValue","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","data","value","key","schoolDate","rankDate","stageDateNode","map","item","_react_16_8_6_react_default","a","createElement","schoolDateNode","index","rankDateNode","itemData","childData","remain","deleteIcon","row","col","offset","es_button","type","shape","icon","onClick","es_form","Item","assign","label","initialValue","rules","required","message","input","stage","es_select","school","time","format","allowClear","firstMajor","firtGpa","input_number","min","max","rank","secondMajor","secondGpa","React","Component","create","HomeWork","handleSubmit","e","preventDefault","child","stateData","componentData","tempData","pop","push","setState","addFlag","add","flag","length","initData","Date","parse","info","bind","someValue","filterData","filter","_this2","class","theme","style","margin","onSubmit","experience","ref","width","className","htmlType","Boolean","window","location","hostname","match","ReactDOM","render","homeWork","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ccf5e06d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Form, Select, DatePicker, Input, InputNumber, Icon, Button } from 'antd'\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker\r\nclass ExperienceItem extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            size: 'default'\r\n        }\r\n        this.props.onRef(this)\r\n    }\r\n    verify = () => {\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            // 校验成功err为null\r\n            // 校验失败，校验错误信息,(!err)为true \r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n\r\n    }\r\n    getDate() {\r\n        let resDate = this.props.form.getFieldsValue()\r\n        return resDate\r\n    }\r\n    delete = () => {\r\n        let deleteItem = this.getDate().id.toString()\r\n        console.log(this.getDate())\r\n        this.props.updateParent(deleteItem)\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: { span: 3 },\r\n            wrapperCol: { span: 4 },\r\n        };\r\n        const { size } = this.state;\r\n        const data =\r\n        {\r\n            stageDate: [{ value: '高中', key: '01' }, { value: '本科', key: '02' }, { value: '硕士', key: '03' }, { value: '博士', key: '04' }],\r\n            schoolDate: [{ value: '北京大学', key: '001' }, { value: '清华大学', key: '002' }, { value: '复旦大学', key: '003' }, { value: '上海交大', key: '004' }],\r\n            rankDate: [{ value: '前10%', key: '0001' }, { value: '前20%', key: '0002' }, { value: '前30%', key: '0003' }, { value: '前40%', key: '0004' }]\r\n        }\r\n        const { stageDate = [], schoolDate = [], rankDate = [] } = data\r\n        const stageDateNode = stageDate.map((item) => (<Option key={item.key}>{item.value}</Option>))\r\n        const schoolDateNode = schoolDate.map((item, index) => (<Option key={item.key}>{item.value}</Option>))\r\n        const rankDateNode = rankDate.map((item, index) => (<Option key={item.key}>{item.value}</Option>))\r\n        const itemData = this.props.childData\r\n        const remain = this.props.remain\r\n        let deleteIcon = (\r\n        <Row>\r\n            <Col span={2} offset={22}><Button type=\"primary\" shape=\"circle\" icon=\"delete\" size='small' onClick={this.delete} /></Col>\r\n        </Row>\r\n        )\r\n        // const ComponentId = id.toString()\r\n        return (\r\n            <Row>\r\n                {\r\n                    remain ? deleteIcon : null\r\n                }\r\n                \r\n                <Col>\r\n                    <Form.Item label=\"id\"  {...formItemLayout}>\r\n                        {getFieldDecorator('id', {\r\n                            initialValue: itemData.id,\r\n                            rules: [{ required: false, message: 'Please input your stage!' }],\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Item label=\"教育阶段\" {...formItemLayout}>\r\n                        {getFieldDecorator('stage', {\r\n                            initialValue: itemData.stage,\r\n                            rules: [{ required: true, message: 'Please input your stage!' }],\r\n                        })(<Select>\r\n                            {\r\n                                stageDateNode\r\n                            }\r\n                        </Select>)}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Item label=\"学校\" {...formItemLayout}>\r\n                        {getFieldDecorator('school', {\r\n                            initialValue: itemData.school,\r\n                            rules: [{ required: true, message: 'Please input your school!' }],\r\n                        })(<Select>\r\n                            {\r\n                                schoolDateNode\r\n                            }\r\n                        </Select>)}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Item label=\"起止时间\" {...formItemLayout}>\r\n                        {getFieldDecorator('time', {\r\n                            initialValue: itemData.time,\r\n                            rules: [{ required: true, message: 'Please input your time!' }],\r\n                        })(<RangePicker size={size} format='YYYY-MM-DD' allowClear />)}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={7} offset={0}>\r\n                    <Form.Item label=\"第一学位专业\" labelCol={{ span: 10 }} wrapperCol={{ span: 14 }} >\r\n                        {getFieldDecorator('firstMajor', {\r\n                            initialValue: itemData.firstMajor,\r\n                            rules: [{ required: true, message: 'Please input your firstMajor!' }],\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={17} offset={0}>\r\n                    <Form.Item label=\"第一学位GPA\" labelCol={{ span: 10 }} wrapperCol={{ span: 14 }}>\r\n                        {getFieldDecorator('firtGpa', {\r\n                            initialValue: itemData.firtGpa,\r\n                            rules: [{ required: true, message: 'Please input your firtGpa!' }],\r\n                        })(<InputNumber min={0} max={10} size={'max'} />)}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Form.Item label=\"第一学位排名\" {...formItemLayout}>\r\n                        {getFieldDecorator('rank', {\r\n                            initialValue: itemData.rank,\r\n                            rules: [{ required: true, message: 'Please input your rank!' }],\r\n                        })(<Select>\r\n                            {\r\n                                rankDateNode\r\n                            }\r\n                        </Select>)}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={7} offset={0}>\r\n                    <Form.Item label=\"第二学位专业\" labelCol={{ span: 10 }} wrapperCol={{ span: 14 }} >\r\n                        {getFieldDecorator('secondMajor', {\r\n                            initialValue: itemData.secondMajor,\r\n                            rules: [{ required: true, message: 'Please input your secondMajor!' }],\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={15} offset={0}>\r\n                    <Form.Item label=\"第二学位GPA\" labelCol={{ span: 10 }} wrapperCol={{ span: 14 }}>\r\n                        {getFieldDecorator('secondGpa', {\r\n                            initialValue: itemData.secondGpa,\r\n                            rules: [{ required: true, message: 'Please input your secondGpa!' }],\r\n                        })(<InputNumber min={0} max={10} size={'max'} />)}\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default ExperienceItem = Form.create()(ExperienceItem);","import React from \"react\";\r\nimport { Row, Col, Form, Button, Icon,  message } from \"antd\";\r\nimport Experience from \"./experience\";\r\n\r\nclass HomeWork extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state =\r\n            {   \r\n                addFlag: false,\r\n                componentData:[{\r\n                    firstMajor: '',\r\n                    firtGpa: '',\r\n                    id: '001',\r\n                    rank: '',\r\n                    school: '',\r\n                    secondGpa: '',\r\n                    secondMajor: '',\r\n                    stage: '',\r\n                    time: ''\r\n                }],\r\n                initData:[{\r\n                    firstMajor: '',\r\n                    firtGpa: '',\r\n                    id: '',\r\n                    rank: '',\r\n                    school: '',\r\n                    secondGpa: '',\r\n                    secondMajor: '',\r\n                    stage: '',\r\n                    time: ''\r\n                }]\r\n            }\r\n        this.updateParent= this.updateParent.bind(this);\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.child.verify()\r\n        let stateData = this.state.componentData\r\n        let tempData = this.child.getDate()\r\n        \r\n        // tempData.id = Date.parse(new Date()).toString()\r\n        stateData.pop()\r\n        stateData.push(tempData)\r\n        console.log(stateData)\r\n        this.setState({componentData:stateData,addFlag: true})\r\n        console.log(this.state.componentData)\r\n    };\r\n    updateParent(someValue) {\r\n        console.log(someValue);//在这里就可以取到子组件传来的值\r\n        let filterData = this.state.componentData.filter(item =>item.id != someValue )\r\n        console.log(filterData)\r\n        this.setState({componentData:filterData})\r\n      }\r\n    add = () => {\r\n        let flag = true ;\r\n        let itemData = this.state.componentData[this.state.componentData.length - 1]\r\n        for(let item in itemData){\r\n            if(itemData[item] === ''){\r\n                flag = false\r\n            }\r\n        }\r\n        \r\n        if(flag && this.state.addFlag){\r\n            let tempData = this.state.initData\r\n            tempData.id = Date.parse(new Date()).toString()\r\n            this.state.componentData.push(tempData)\r\n            this.setState({addFlag : false})\r\n        }else{\r\n            message.info('请先保存！')\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const componentData = this.state.componentData\r\n        const remainItem  = false\r\n        return (\r\n            <div>\r\n                <Row class='title'>\r\n                    <Col span={12} ><h2><Icon type=\"dropbox-circle\" theme=\"filled\" style={{margin:`0 10px 0 20px`}}/>教育经历</h2></Col>\r\n                </Row>\r\n                <br />\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    {\r\n                        componentData.map((item, index) => {\r\n                            if (index !== 0) {\r\n                                return (\r\n                                    <div>\r\n                                        <hr />\r\n                                        <Experience  childData={item} onRef={ref => this.child = ref} updateParent= {this.updateParent} remain={!remainItem} />\r\n                                    </div>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <div>\r\n                                        <Experience  childData={item} onRef={ref => this.child = ref} updateParent= {this.updateParent} remain={remainItem}  />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                        )\r\n                    }\r\n                    <Row class='addContent' >\r\n                        <Col offset={6}>\r\n                            <Form.Item >\r\n                                <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\r\n                                    <Icon type=\"plus\" /> Add field\r\n                            </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class='confirm'>\r\n                        <Form.Item className=\"Item\">\r\n                            <Col span={4} offset={7}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">保存并且提交</Button>\r\n                            </Col>\r\n                            <Col span={4} offset={3}>\r\n                                <Button>取消</Button>\r\n                            </Col>\r\n                        </Form.Item>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default (HomeWork = Form.create()(HomeWork));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport HomeWork from './homeWork'\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<HomeWork />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}